<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ko-techblog</title><link>https://ko-he-e.github.io/ko-techblog/</link><description>Recent content on ko-techblog</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://ko-he-e.github.io/ko-techblog/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo(+Robust) × MicroCMS × Github Pagesでサクッと静的Webサイトを作る！</title><link>https://ko-he-e.github.io/ko-techblog/xdi810pll/</link><pubDate>Sun, 12 Feb 2023 07:15:53 +0000</pubDate><guid>https://ko-he-e.github.io/ko-techblog/xdi810pll/</guid><description>はじめに 最近は寒くなったり暖かくなったり忙しいですね。
今回はやっと重い腰を上げ、ポートフォリオサイトを作ろうかなと思ったのですが。。
わざわざ色々なページを作り込まなくても、ブログ記事だけサクッと手っ取り早く公開できないかなぁと思いたち、Markdownをレンダリングできる静的サイトジェネレーターを探してホスティングまでしてみました。
使用技術 Hugo https://gohugo.io/
Goで記述された、オープンソースの静的サイトジェネレーターです。
Markdownを使用して簡単にページを作成したり、JavaScriptやCSSを使用して自由にカスタマイズしたりと、柔軟にWebサイトを構築することができます。
fastとmodernをウリにしているようです。
Robust https://github.com/dim0627/hugo_theme_robust
Hugoのテーマの一つです。
HugoにはThemeという機能があり、自分で1からスタイルやフォーマットを作成せずとも、他の人が作成したThemeを利用して「いい感じに」Webサイトを作成することができます。
公式ドキュメントにも色々なテーマが載っていますね。
今回使用したRobustは日本人の方が作成されたテーマのようです。
MicroCMS https://microcms.io/
MicroCMSはバックエンドを自作せずともブログやECサイトなどのWebサイトを構築できる、Headless CMS (Contents Management System)です。
こちらも日本製です。
他にも、 Contentful や Hygraph (旧GraphCMS)などといったHeadless CMSがありますが、以前Contentfulを使用したことがあったのと、日本製ということで今回はMicroCMSを採用しています。
無料枠が充実しており、制限はあるものの、無料でもかなり使うことができます。( 料金プラン )
Github Pages https://docs.github.com/ja/pages
こちらは言わずもがな、みんな大好きGithubで静的サイトをホスティングできるサービスです。
今回はHugoのビルドのために、Github Actionsも使用しています。
アーキテクチャ図 後ほど追加
開発！ Hugoのインストールとセットアップ 環境に合わせてHugoのインストールを行なってください。( ガイド )
Macではbrewで一発でした。
brew install hugo クイックスタート にあるように進めていきます。
hubo new site sample cd sample テーマの追加を行います。公式にあるようにsubmoduleを使用しておきましょう。
# サブモジュールを使用するために、gitの初期化が必要 git init # themes/以下に配置 git submodule add https://github.com/dim0627/hugo_theme_robust themes/robust テーマの追加ができたので、Hugoにどのテーマを使用するかを教えてあげるため、configファイルに追記しましょう。(コマンドではなく、ファイルを開いて追記しても大丈夫です)</description></item><item><title>ブログテンプレートから作成されました</title><link>https://ko-he-e.github.io/ko-techblog/5wfms8qbb4h/</link><pubDate>Thu, 09 Feb 2023 08:10:25 +0000</pubDate><guid>https://ko-he-e.github.io/ko-techblog/5wfms8qbb4h/</guid><description>みだし1 ブログテンプレートから作成されました🎉 ブログテンプレートからAPIを作成しました。
おつかれさまでした🎉
APIプレビューを試そう🚀 最初に「APIプレビュー」をしてみましょう。
入稿したコンテンツはAPI経由で取得し、Viewに繋ぎ込みます。
APIプレビューでは実際のAPIレスポンスを確認でき、あなたの開発を加速させます。
👇まずはここをクリックします。
APIプレビュー画面が開いたら、 「取得」 ボタンでリクエストを試してみましょう。
この記事の内容がAPIで取得できていることがわかります。
みだし1 次にやること🏃 APIプレビューで確認したレスポンスを参考に、あなた自身のWebサイトを構築しましょう。
microCMSはAPIでコンテンツを取得するため、お好きな言語・フレームワークで画面を構築できます。
JavaScript SDK Nuxt SDK Gatsby SDK その他に サーバーサイドSDK（PHP / Go / Ruby）やモバイルSDK（iOS / Android） もございます。
3も作っておく お困りなことや疑問点などございましたらお気軽にご連絡ください。
サポート窓口： support@microcms.io
よくある質問： https://help.microcms.io/ja/knowledge</description></item></channel></rss>